// Generated by CoffeeScript 1.6.3
/*
*/

var Connector, OpenerpClient, Q, models,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Q = require('q');

Connector = require("./connector");

models = {};

["Product", "Partner", "SaleOrder", "Employee"].map(function(modelName) {
  var name;
  name = modelName[0].toLowerCase() + modelName.slice(1);
  return models[modelName] = require("./models/" + name);
});

OpenerpClient = (function() {
  function OpenerpClient(_arg) {
    var dbname, hostname, model, port;
    dbname = _arg.dbname, hostname = _arg.hostname, port = _arg.port;
    this.login = __bind(this.login, this);
    this.connector = new Connector(dbname, hostname, port);
    for (model in models) {
      this[model] = new models[model](this.connector);
    }
  }

  OpenerpClient.prototype.login = function(username, password) {
    var params, promise,
      _this = this;
    promise = Q.defer();
    params = [this.connector.dbname, username, password];
    this.connector.commonCall('login', params).then(function(userId) {
      _this.connector.setUser(userId, password);
      return promise.resolve(userId);
    }).fail(function(err) {
      return promise.reject(err);
    });
    return promise.promise;
  };

  return OpenerpClient;

})();

module.exports = OpenerpClient;
