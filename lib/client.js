// Generated by CoffeeScript 1.6.3
var Connector, Openerp, Q, xmlrpc,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

xmlrpc = require('xmlrpc');

Q = require('q');

Connector = (function() {
  function Connector(dbname, hostname, port, user, passwd) {
    this.dbname = dbname;
    this.hostname = hostname;
    this.port = port;
    this.user = user;
    this.passwd = passwd;
    this.getParams = __bind(this.getParams, this);
    this.url = 'http://' + hostname + ':' + port + '/xmlrpc';
    this.common = {
      host: this.host,
      port: this.port,
      path: '/xmlrpc/common'
    };
    this.object = {
      host: this.host,
      port: this.port,
      path: '/xmlrpc/object'
    };
    this.rpc_common = xmlrpc.createClient(this.common);
    this.rpc_object = xmlrpc.createClient(this.object);
  }

  Connector.prototype.getParams = function() {
    return [this.dbname, this.user, this.password];
  };

  return Connector;

})();

Openerp = (function() {
  function Openerp(dbname, hostname, port, user, passwd) {
    this.login = __bind(this.login, this);
    this.connector = new Connector(dbname, hostname, port, user, passwd);
  }

  Openerp.prototype.login = function(username, password) {
    var promise,
      _this = this;
    promise = Q.defer();
    Q.nfcall(this.connector.rpc_common.methodCall, 'login', this.connector.getParams()).then(function(userId) {
      return promise.resolve(userId);
    }).fail(function(err) {
      return promise.reject(err);
    });
    return promise.promise;
  };

  return Openerp;

})();
